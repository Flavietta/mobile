package com.mycompany.myapp;

import com.codename1.capture.Capture;
import com.codename1.components.ImageViewer;
import com.codename1.components.ToastBar;
import com.codename1.io.CharArrayReader;
import com.codename1.io.ConnectionRequest;
import com.codename1.io.JSONParser;
import com.mycompany.gui.LoginForm;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import userclasses.StateMachine;
import com.codename1.io.Log;
import com.codename1.io.NetworkEvent;
import com.codename1.io.NetworkManager;
import com.codename1.ui.Component;
import com.codename1.ui.FontImage;
import com.codename1.ui.Toolbar;
import com.codename1.ui.events.ActionListener;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.mycompany.entity.Recommandation;
import com.mycompany.services.UserController;
import com.mycompany.entity.User;
import com.mycompany.gui.ProfileForm;
import com.mycompany.services.Authentication;
import com.mycompany.services.JSONObject;
import com.mycompany.services.RateController;
import com.mycompany.services.RecommandationController;
import com.mycompany.services.Registration;
import com.mycompany.services.exception.LoginException;
import com.mycompany.services.exception.NotEmailException;
import com.mycompany.services.exception.UserAlreadyExistsException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;
import java.util.Map;
import java.util.Random;
import com.codename1.ui.Image;
import com.codename1.ui.layouts.BorderLayout;


/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
/*
 * Copyright (c) 2016, Codename One
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated 
 * documentation files (the "Software"), to deal in the Software without restriction, including without limitation 
 * the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, 
 * and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions 
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT 
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. 
 */



/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        theme = UIManager.initFirstTheme("/theme_2");
      
        
       /* JSONObject json = new JSONObject();
//        json.put(key, context)
                
        String url = "https://api.sendgrid.com/api/mail.send.json";
        ConnectionRequest post = new ConnectionRequest(){
            
            @Override
            protected void readResponse(InputStream input) throws IOException {
               // parse response data
            }
        };
        post.addResponseListener(new ActionListener<NetworkEvent>() {

        public void actionPerformed(NetworkEvent ev) {
                          JSONParser jsonp = new JSONParser();
                          System.out.println("sssssssssssssssssss");

        try {
            Map<String, Object> recs = jsonp.parseJSON(new CharArrayReader(new String(post.getResponseData()).toCharArray()));
            System.out.println("JSON : " + ((List<Map<String, Object>>)recs.get("root")).get(0).values());
        }catch(Exception ex){

            }
        }
        });
        /*post.addArgument("api_user", "Mahdouch");
        post.addArgument("api_key", "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");
        post.addArgument("to", "saidi3mahdi@gmail.com");
        post.addArgument("toname", "Mahdi");
        post.addArgument("subject", "COde ");
        post.addArgument("text", "Emty ");
        post.addArgument("from", "elmahdi.saidi@esprit.tn");
        */
       /* post.setUrl(url);
        post.setPost(true);
        //post.setContentType("application/json");
                NetworkManager.getInstance().addToQueueAndWait(post);

        //Recommandation test
        /*System.out.println("----------AllRecommandation------------");
        for (Recommandation rec : RecommandationController.getAll()) {
             System.out.println(rec.getRate()+"   "+rec.getId());
        }
        /*
        System.out.println("----------AllRate------------");
        System.out.println(RateController.getAll(RecommandationController.getAll().get(1)));
        */
        /*//
        try {
            //Registration static test
            Registration.register("Samir@yahoo.com", "Samir", "samir");
            System.out.println("Successfully registred");
        } catch (NotEmailException ex) {
            System.out.println("Message " + ex.getMessage());
        } catch (UserAlreadyExistsException ex) {
            System.out.println("Message " + ex.getMessage());
        }
        /*
        try {
            //Registration static test
            Registration.register("Samir@yahoo.com", "Samir", "samir");
        } catch (NotEmailException ex) {
            System.out.println("Message " + ex.getMessage());
        } catch (UserAlreadyExistsException ex) {
            System.out.println("Message " + ex.getMessage());
        }
        
        try {
            //Registration static test
            Registration.register("Samir", "Samir", "samir");
        } catch (NotEmailException ex) {
            System.out.println("Message " + ex.getMessage());
        } catch (UserAlreadyExistsException ex) {
            System.out.println("Message " + ex.getMessage());
        }
        */
        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);
        Toolbar.setCenteredDefault(false);
        // Pro only feature, uncomment if you have a pro subscription
        // Log.bindCrashProtection(true);
    }
    



    public void start() {
        if(current != null){
            current.show();
            return;
        }
        
        new LoginForm(theme).show();
    }
  
    

    public void stop() {
        current = Display.getInstance().getCurrent();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = Display.getInstance().getCurrent();
        }
    }
    
    public void destroy() {
    }    
    
}
